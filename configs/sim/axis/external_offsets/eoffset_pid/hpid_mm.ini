# hpid_mm.ini: adapted from rodw plasma configuration

[APPLICATIONS]
# delay because some pins are postgui
DELAY = 3

# optional for use with filter.hal:
# not all filters have all of these pins
# enable pin must be toggled for biquad item changes
APP = sim_pin --title "FILTER" \
              filter.enable/mode=Toggle filter.f0 filter.Q filter.type \
              filter.gain \
              filter.npts \
              > /dev/null

APP = sim_pin --title "INI A/V" \
      ini.z.max_velocity \
      ini.z.max_acceleration

APP = sim_pin --title "PID TUNE" \
      zo.pgain \
      zo.igain \
      zo.dgain

APP = sim_pin --title "SIM Torch" \
      sim:torch.gain \
      sim:arcwait.width

APP = sim_pin --title Experiments \
      zo.fnum \
      zo.kptd \
      zo.nfilt \
      E:enable-in-c

APP = halscope -i hpid.halscope

[HAL]
TWOPASS = on
HALUI   = halui

# LIB:basic_sim.tcl creates all connections for simulaton
# use -no_sim_spindle (avoid lowpass usage clash in sim_torch.hal)
HALFILE = LIB:basic_sim.tcl -no_sim_spindle

# The following halfile, LIB:hpid.hal, creates all
# MANDATORY signals (named E:*)
# Some signals must be connected by subsequent user halfiles.
# See the notes in the file for more information.
# The LIB:hpid.hal file is located at:
#     $(linuxcnc_var HALLIB_DIR)/hpid.hal
# View this file with your editor, for example, using gedit:
# $ gedit $(linuxcnc_var HALLIB_DIR)/hpid.hal
HALFILE = LIB:hpid.hal
# Uncomment to show all the signals created by hpid.hal:
# HALCMD = show sig E:
# HALCMD = show sig DBG:

# simulation of a torch:
HALFILE = sim_torch.hal

# uncomment one for filtering of the feedback:
#HALFILE = filter.tcl lowpass
#HALFILE = filter.tcl biquad

# uncomment to perturb output instead of input:
#HALFILE = outperturb.hal

POSTGUI_HALFILE = hpid_panel.hal

[EMC]
MACHINE = hpid_mm.ini (Torch Height Demo (mm-based))
VERSION = 1.0

[DISPLAY]
PYVCP = hpid_panel.xml
DISPLAY = axis
OPEN_FILE = hpid_demo_mm.ngc
GEOMETRY = XYZ
POSITION_OFFSET = RELATIVE
POSITION_FEEDBACK = ACTUAL
MAX_LINEAR_VELOCITY = 350
MAX_ANGULAR_VELOCITY = 60

[TASK]
TASK = milltask
CYCLE_TIME = 0.001

[RS274NGC]
SUBROUTINE_PATH = .
USER_M_PATH = .
PARAMETER_FILE = sim_mm.var

[EMCIO]
TOOL_TABLE = eoffset.tbl
EMCIO = io
CYCLE_TIME = 0.100

[EMCMOT]
EMCMOT = motmod
SERVO_PERIOD = 1000000

[TRAJ]
COORDINATES   = XYZ
LINEAR_UNITS  = mm
ANGULAR_UNITS = degree

[KINS]
JOINTS     = 3
KINEMATICS = trivkins coordinates=XYZ kinstype=BOTH

[AXIS_X]
MAX_VELOCITY = 350
MAX_ACCELERATION = 900
MIN_LIMIT = -0.01
MAX_LIMIT = 1260.1

[AXIS_Y]
MAX_VELOCITY = 360
MAX_ACCELERATION = 900
MIN_LIMIT = -0.01
MAX_LIMIT = 1221.1

[AXIS_Z]
HPID_PGAIN =     40
HPID_IGAIN =      0
HPID_DGAIN =      3
HPID_FNUM  =      0
HPID_K     =  10000

# scaling for eoffset to simulated volts:
HPID_SIM_VOLTS_PER_MM        =   10
HPID_SIM_TOVOLTS_OFFSET      =   60
HPID_SIM_TORCH_GAIN          =    0.2696
HPID_SIM_TORCH_ARCWIDTH_WAIT =    1

# NOTE: setting OFFSET_AV_RATIO to 0.5 and using
#       doubled values for MAX_VELOCITY,MAX_ACCELERATION
#       is only applicable to systems where planned
#       motion (gcode) and external offset motion
#       are MUTUALLY EXCLUSIVE
OFFSET_AV_RATIO  =    0.5
MAX_VELOCITY     =  220.0
MAX_ACCELERATION = 3000
MIN_LIMIT        =  -84
MAX_LIMIT        =    5

[JOINT_0]
TYPE          = LINEAR
HOME_SEQUENCE = 0

[JOINT_1]
TYPE          = LINEAR
HOME_SEQUENCE = 0

[JOINT_2]
TYPE          = LINEAR
HOME_SEQUENCE = 0
